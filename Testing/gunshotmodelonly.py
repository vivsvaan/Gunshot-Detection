# -*- coding: utf-8 -*-
"""GunShotModelOnly.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14DAV-3A1Y5JfLTuyRAq6twzdPdQlks8D
"""

from fastai import *
from fastai.vision import *

from google.colab import drive
drive.mount('/content/drive')

import IPython
IPython.display.Audio("/content/drive/My Drive/MinorProject/test/test5.mp3")

import matplotlib.pyplot as plt
from matplotlib.pyplot import specgram
import librosa
import librosa.display
import numpy as np
def create_fold_spectrograms():
    spectrogram_path = Path('/content/drive/My Drive/GunShot/')  
    audio_path = Path('/content/drive/My Drive/GunShot/test/')  
    for audio_file in list(Path(audio_path).glob('*.mp3')):
        samples, sample_rate = librosa.load(audio_file)
        fig = plt.figure(figsize=[0.72,0.72])
        ax = fig.add_subplot(111)
        ax.axes.get_xaxis().set_visible(False)
        ax.axes.get_yaxis().set_visible(False)
        ax.set_frame_on(False)
        filename  = spectrogram_path/Path(audio_file).name.replace('.mp3','.png')
        S = librosa.feature.melspectrogram(y=samples, sr=sample_rate)
        librosa.display.specshow(librosa.power_to_db(S, ref=np.max))
        plt.savefig(filename, dpi=400, bbox_inches='tight',pad_inches=0)
        plt.close('all')

PATH= Path('/content/drive/My Drive/GunShot/dataset')

img = open_image(PATH/'/content/drive/My Drive/MinorProject/TestImages/test2.png')
img

learn = load_learner(PATH)

import smtplib, ssl
import geocoder

pip install geocoder

def callGun():
  g = geocoder.ip('me')

  port = 465  # For SSL
  smtp_server = "smtp.gmail.com"

  sender_email = "co16362.ccet@gmail.com"
  receiver_email = "sahil11.jangra@gmail.com"
  password = input("Type your password and press enter: ")
  message = """\
  Subject: Gunshot Detected

  A Gunshot sound was detected at location """ + str(g.latlng)

  context = ssl.create_default_context()
  with smtplib.SMTP_SSL(smtp_server, port, context=context) as server:
    server.login(sender_email, password)
    server.sendmail(sender_email, receiver_email, message)

callGun()

pred_class = learn.predict(img)
#pred_idx,outputs
pred_class
# if(pred_class == 'gun'):
#   callGun()